# client.keystore is empty
# client.truststore = tableau-uat, tableau-postgres
# server.truststore = empty
# server.keystore: imst PK, digicert-interm cert, digicert-root

# You can specify, in command line, a cert folder (to centrally manage all certs)
# The generated keystores will be place in the config-out directory

# 1. First we process _metadata.yml
#    - The tags in _metadata.yml can be used in _cert-metadata.yml
# 2. We then process _values.yml
#    - The tags used in this file can then be provided values (or via prompts, web, etc...)
# 3. We then 'resolve' _cert-metadata.yml
# 4. We then generate the keystore files based on the 'resolved' _cert-metadata.yml

certs:

  tableau-webserver-cert:                               # this is an internal reference name for the cert
    format: cer                                         # this is the format [ pem , der ]
    prompt-text: Tableau webserver public certificate
    file-name: tableauUAT.cer

  tableau-postgres-cert:
    format: crt
    prompt-text: Tableau's embedded Postgres database public certificate
    file-name: tableau-postgres-server.crt

  digicert-root-cert:
    format: pem
    prompt-text: Digicert's root certificate
    file-name: DigiCertSHA2-Under-SHA2-Root-GlobalCAG2.pem

  digicert-intermediate-cert:
    format: pem
    prompt-text: Digicert's intermediate certificate
    file-name: DigiCertSHA2-Under-SHA2-Root-GlobalCAG2-ExtendedValidationServer.pem

  oauth-cert:
    format: pem
    prompt-text: Light OAuth's public certificate
    file-name: imst-uat.pem

keys:

  # private keys must be in a PKCS12 or JKS keystore

  tableau-private-key:
    prompt-text: Tableau Proxy service's private key (for TLS)
    format: jks                                                 # options [ jks / pkcs12 ]
    alias: tableau-pk-alias                                     # alias field ignored if format = pkcs12
    file-name: tableau-pk.jks

  other-private-key:
    prompt-text: Tableau Proxy service's private key (for TLS)
    format: pkcs12                                              # options [ jks / pkcs12 / p12 ]
    file-name: tableau-pk.p12

keystores:

  server.keystore:
    file-name: server.keystore
    password: the-keystore-password
    certs:
    - digicert-intermediate-cert:
        alias: intermediate
    - digicert-root-cert:
        alias: root
    keys:
    - tableau-private-key:
        alias: tableau-pk
        password: the-key-password

  server.truststore:                        # this is an empty keystore
    file-name: server.truststore
    password: the-server-keystore-password

  client.keystore:
    file-name: client.keystore
    password: the-client-keystore-password

  client.truststore:
    file-name: client.truststore
    password: the-client-truststore-password
    certs:
    - tableau-webserver-cert:
        alias: tableau
    - tableau-postgres-cert:
        alias: postgres