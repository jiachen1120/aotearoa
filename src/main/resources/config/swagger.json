{
  "swagger": "2.0",
  "info": {
    "version": "1.0.6.0",
    "title": "Tableau REST API Proxy and Workbook Description Service",
    "description": "A Proxy to the Tableau 10.4 (via REST API 2.7), that also retrieves workbook descriptions a Tableau 10.4 Postgres database to fix the lack of descriptions from the Tableau 10.4 REST API.",
    "contact": {
      "email": "Mailbox.AskEDT-BI@cibc.com"
    }
  },
  "tags": [
    {
      "name": "Workbook Descriptions",
      "description": "Exposes a REST endpoint that enables access to Tableau workbook descriptions."
    },
    {
      "name": "Tableau Proxy Requests",
      "description": "Proxied Tableau API requests"
    }
  ],
  "host": "imst.dev2.cibc.com",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "application": {
      "tokenUrl": "https://imso.dev2.cibc.com/",
      "scopes": {
        "tableau.read": "allows reading Tableau resources"
      },
      "type": "oauth2",
      "flow": "application"
    }
  },
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/workbooks/descriptions": {
      "get": {
        "summary": "Returns workbook descriptions",
        "produces": [
          "application/json"
        ],
        "description": "Returns all workbook descriptions accessible to the proxy user, matched with the workbook id of the workbook the description is for.",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkbookDescription"
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Workbook Descriptions"
        ]
      }
    },
    "/api/2.7/sites": {
      "get": {
        "description": "Returns a list of the sites on the server that the caller of this method has access to.",
        "operationId": "querySites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page-size",
            "description": "(Optional) The number of items to return in one response. The minimum is 1. The maximum is 1000. The default is 100.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page-number",
            "description": "(Optional) The offset for paging. The default is 1.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Sites that the user has access to are returned",
            "schema": {
              "required": [
                "pagination",
                "sites"
              ],
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "sites": {
                  "$ref": "#/definitions/sites"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Page Size Limit Exceeded",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    },
    "/api/2.7/sites/{site-id}/workbooks": {
      "get": {
        "description": "Returns the workbooks on a site.",
        "operationId": "queryWorkbooksForSite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "The ID of the site that contains the workbooks.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "page-size",
            "description": "(Optional) The number of items to return in one response. The minimum is 1. The maximum is 1000. The defaut is 100.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page-number",
            "description": "(Optional) The offset for the paging. The default is 1.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Workbook records returned for the matching Site ID",
            "schema": {
              "required": [
                "pagination",
                "workbooks"
              ],
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "workbooks": {
                  "$ref": "#/definitions/workbooks"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Read forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Site/User Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    },
    "/api/2.7/sites/{site-id}/workbooks/{workbook-id}": {
      "get": {
        "description": "Returns information about the specified workbook, including information about views and tags.",
        "operationId": "queryWorkbook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "ID of Site to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workbook-id",
            "description": "ID of Workbook to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Workbook record returned for the matching Workbook ID for a Site",
            "schema": {
              "properties": {
                "workbook": {
                  "$ref": "#/definitions/workbook"
                }
              }
            }
          },
          "403": {
            "description": "Read forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Site/Workbook Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    },
    "/api/2.7/sites/{site-id}/workbooks/{workbook-id}/previewImage": {
      "get": {
        "description": "Returns the thumbnail image as a PNG file for the specified workbook. Usually the image that is returned is for the first sheet in the workbook.",
        "operationId": "queryWorkbookPreviewImage",
        "produces": [
          "images/png"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "The ID of the site that contains the workbook.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workbook-id",
            "description": "The ID of the workbook to return the thumbnail image for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The workbook's preview image in PNG format (MIME media type image/png).",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "403": {
            "description": "Read forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Site/Workbook Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    },
    "/api/2.7/sites/{site-id}/workbooks/{workbook-id}/views/{view-id}/previewImage": {
      "get": {
        "description": "Returns the thumbnail image for the specified view.",
        "operationId": "queryViewPreviewImage",
        "produces": [
          "images/png"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "The ID of the site that contains the view.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workbook-id",
            "description": "The ID of the workbook to return the thumbnail image for.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "view-id",
            "description": "The ID of the view to return the thumbnail image for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The workbook's preview image in PNG format (MIME media type image/png).",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "403": {
            "description": "Read forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Site/Workbook Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    },
    "/api/2.7/sites/{site-id}/users": {
      "get": {
        "description": "Returns users associated with specified site.",
        "operationId": "getusersonsite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "The ID of the site that contains the user.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "page-size",
            "description": "(Optional) The number of items to return in one response. The minimum is 1. The maximum is 1000. The default is 100.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page-number",
            "description": "(Optional) The offset for paging. The default is 1.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User records returned for the matching Site ID",
            "schema": {
              "required": [
                "pagination",
                "users"
              ],
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "users": {
                  "$ref": "#/definitions/users"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Read forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Site/User Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    },
    "/api/2.7/sites/{site-id}/users/{user-id}": {
      "get": {
        "description": "Returns the specified user in the specified site.",
        "operationId": "queryUserOnSite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "The ID of the site that contains the user.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "user-id",
            "description": "The ID of the user to get information for.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "page-size",
            "description": "(Optional) The number of items to return in one response. The minimum is 1. The maximum is 1000. The default is 100.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page-number",
            "description": "(Optional) The offset for paging. The default is 1.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User records returned for the matching Site ID",
            "schema": {
              "required": [
                "user"
              ],
              "properties": {
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Read forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Site/User Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    },
    "/api/2.7/sites/{site-id}/views": {
      "get": {
        "description": "Returns all the views for the specified site, optionally including usage statistics.",
        "operationId": "queryViewsForSite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "The ID of the site that contains the views.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "get-usage-information",
            "description": "(Optional) true to return usage statistics. The default is false.",
            "required": false,
            "default": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "page-size",
            "description": "(Optional) The number of items to return in one response. The minimum is 1. The maximum is 1000. The defaut is 100.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page-number",
            "description": "(Optional) The offset for the paging. The default is 1.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "field-expression",
            "description": "(Optional) An expression that lets you specify the set of available fields to return. You can qualify the return values based upon predefined keywords such as _all_ or _default_, and you can specify individual fields for the workbooks or other supported resources. You can include multiple field expressions in a request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Workbook records returned for the matching Site ID",
            "schema": {
              "required": [
                "views"
              ],
              "properties": {
                "views": {
                  "$ref": "#/definitions/views"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Read forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Site/User Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    },
    "/api/2.7/sites/{site-id}/projects": {
      "get": {
        "description": "Returns a list of projects on the specified site, with optional parameters for specifying the paging of large results.",
        "operationId": "queryProjectsForSite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "The ID of the site that contains the projects.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "page-size",
            "description": "(Optional) The number of items to return in one response. The minimum is 1. The maximum is 1000. The defaut is 100.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page-number",
            "description": "(Optional) The offset for the paging. The default is 1.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter-expression",
            "description": "(Optional) An expression that lets you specify a subset of data sources to return. You can filter on predefined fields such as name and ownerName. You can include multiple filter expressions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort-expression",
            "description": "(Optional) An expression that lets you specify the order in which user information is returned. If you do not specify a sort expression, the sort order of the information thats returned is undefined.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Workbook records returned for the matching Site ID",
            "schema": {
              "required": [
                "pagination",
                "projects"
              ],
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "projects": {
                  "$ref": "#/definitions/projects"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Read forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Site/User Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    },
    "/api/2.7/sites/{site-id}/datasources": {
      "get": {
        "description": "Returns a list of data sources on the specified site, with optional parameters for specifying the paging of large results.",
        "operationId": "queryDatasources",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "The ID of the site that contains the datasources.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "page-size",
            "description": "(Optional) The number of items to return in one response. The minimum is 1. The maximum is 1000. The defaut is 100.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page-number",
            "description": "(Optional) The offset for the paging. The default is 1.",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter-expression",
            "description": "(Optional) An expression that lets you specify a subset of data sources to return. You can filter on predefined fields such as name and updatedAt. You can include multiple filter expressions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort-expression",
            "description": "(Optional) An expression that lets you specify the order in which user information is returned. If you do not specify a sort expression, the sort order of the information thats returned is undefined.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "field-expression",
            "description": "(Optional) An expression that lets you specify the set of available fields to return. You can qualify the return values based upon predefined keywords such as _all_ or _default_, and you can specify individual fields for the workbooks or other supported resources. You can include multiple field expressions in a request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Datasources returned for the matching Site ID",
            "schema": {
              "required": [
                "pagination",
                "datasources"
              ],
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/pagination"
                },
                "datasources": {
                  "$ref": "#/definitions/datasources"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "403": {
            "description": "Read forbidden",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Site/User Not found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "405": {
            "description": "Invalid request method",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "security": [
          {
            "application": [
              "tableau.read"
            ]
          }
        ],
        "tags": [
          "Tableau Proxy Requests"
        ]
      }
    }
  },
  "definitions": {
    "pagination": {
      "type": "object",
      "required": [
        "pageNumber",
        "pageSize",
        "totalAvailable"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer"
        },
        "pageSize": {
          "type": "integer"
        },
        "totalAvailable": {
          "type": "integer"
        }
      }
    },
    "workbooks": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/workbookName"
      }
    },
    "workbookName": {
      "type": "object",
      "required": [
        "workbook"
      ],
      "properties": {
        "workbook": {
          "$ref": "#/definitions/workbook"
        }
      }
    },
    "workbook": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "contentUrl",
        "showTabs",
        "size",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "contentUrl": {
          "type": "string"
        },
        "showTabs": {
          "type": "boolean"
        },
        "size": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "project": {
          "$ref": "#/definitions/project"
        },
        "owner": {
          "$ref": "#/definitions/owner"
        },
        "tags": {
          "$ref": "#/definitions/tags"
        },
        "views": {
          "$ref": "#/definitions/views"
        }
      }
    },
    "owner": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "views": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/view"
      }
    },
    "view": {
      "type": "object",
      "properties": {
        "view": {
          "$ref": "#/definitions/viewDetails"
        }
      }
    },
    "viewDetails": {
      "type": "object",
      "required": [
        "id",
        "name",
        "contentUrl"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "contentUrl": {
          "type": "string"
        }
      }
    },
    "tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/tag"
      }
    },
    "tag": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/tagDetails"
        }
      }
    },
    "tagDetails": {
      "type": "object",
      "required": [
        "label"
      ],
      "properties": {
        "label": {
          "type": "string"
        }
      }
    },
    "errors": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "summary",
            "detail",
            "code"
          ],
          "properties": {
            "summary": {
              "type": "string"
            },
            "detail": {
              "type": "string"
            },
            "code": {
              "type": "integer"
            }
          }
        }
      }
    },
    "sites": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/siteName"
      }
    },
    "siteName": {
      "type": "object",
      "required": [
        "site"
      ],
      "properties": {
        "site": {
          "$ref": "#/definitions/site"
        }
      }
    },
    "site": {
      "type": "object",
      "required": [
        "id",
        "name",
        "contentUrl",
        "adminmode",
        "userQuota",
        "storageQuota",
        "tierInteractorCapacity",
        "tierBasicUserCapacity",
        "disableSubscriptions",
        "state",
        "revisionHistoryEnabled",
        "revisionLimit",
        "subscribeOthersEnabled",
        "guesAccessEnabled",
        "cacheWarmupEnabled",
        "commentingEnabled",
        "cacheeWarmupThreshold"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "contentUrl": {
          "type": "string"
        },
        "adminmode": {
          "type": "string",
          "enum": [
            "ContentOnly",
            "ContentAndUsers"
          ]
        },
        "userQuota": {
          "type": "integer"
        },
        "storageQuota": {
          "type": "integer"
        },
        "tierInteractorCapacity": {
          "type": "integer"
        },
        "tierBasicUserCapacity": {
          "type": "integer"
        },
        "disableSubscriptions": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "revisionHistoryEnabled": {
          "type": "boolean"
        },
        "revisionLimit": {
          "type": "integer"
        },
        "subscribeOthersEnabled": {
          "type": "boolean"
        },
        "guestAccessEnabled": {
          "type": "boolean"
        },
        "cacheWarmupEnabled": {
          "type": "boolean"
        },
        "commentingEnabled": {
          "type": "boolean"
        },
        "cacheeWarmupThreshold": {
          "type": "integer"
        },
        "usage": {
          "type": "object",
          "required": [
            "numUsers",
            "storage"
          ],
          "properties": {
            "numUsers": {
              "type": "integer"
            },
            "storage": {
              "type": "integer"
            }
          }
        }
      }
    },
    "users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/userName"
      }
    },
    "userName": {
      "type": "object",
      "required": [
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/user"
        }
      }
    },
    "user": {
      "type": "object",
      "required": [
        "id",
        "name",
        "fullName",
        "email",
        "password",
        "siteRole",
        "lastLogin",
        "externalAuthUserId",
        "authSetting"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "siteRole": {
          "type": "string"
        },
        "externalAuthUserId": {
          "type": "string"
        },
        "authSetting": {
          "type": "string"
        },
        "domain": {
          "$ref": "#/definitions/domain"
        }
      }
    },
    "domain": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "parent": {
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "permissions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/permissionName"
      }
    },
    "permissionName": {
      "type": "object",
      "required": [
        "permission"
      ],
      "properties": {
        "permission": {
          "$ref": "#/definitions/permission"
        }
      }
    },
    "permission": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/parent"
        },
        "datasource": {
          "$ref": "#/definitions/datasource"
        },
        "project": {
          "$ref": "#/definitions/project"
        },
        "workbook": {
          "$ref": "#/definitions/workbook"
        },
        "granteeCapabilities": {
          "$ref": "#/definitions/granteeCapabilities"
        }
      }
    },
    "connectionCredentials": {
      "type": "object",
      "required": [
        "name",
        "password",
        "embed",
        "oAuth"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "embed": {
          "type": "boolean"
        },
        "oAuth": {
          "type": "boolean"
        }
      }
    },
    "granteeCapabilities": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/group"
        },
        "user": {
          "$ref": "#/definitions/user"
        },
        "capabilities": {
          "$ref": "#/definitions/capabilities"
        }
      }
    },
    "groups": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/groupName"
      }
    },
    "groupName": {
      "type": "object",
      "required": [
        "group"
      ],
      "properties": {
        "workbook": {
          "$ref": "#/definitions/group"
        }
      }
    },
    "group": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "domain": {
          "$ref": "#/definitions/domain"
        },
        "import": {
          "$ref": "#/definitions/import"
        }
      }
    },
    "datasources": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/datasourceName"
      }
    },
    "datasourceName": {
      "type": "object",
      "required": [
        "datasource"
      ],
      "properties": {
        "project": {
          "$ref": "#/definitions/datasource"
        }
      }
    },
    "datasource": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "contentUrl",
        "type",
        "createdAt",
        "updatedAt",
        "isCertified",
        "certificationNote"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "contentUrl": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "isCertified": {
          "type": "boolean"
        },
        "certificationNote": {
          "type": "string"
        },
        "connectionCredentials": {
          "$ref": "#/definitions/connectionCredentials"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "project": {
          "$ref": "#/definitions/project"
        },
        "owner": {
          "$ref": "#/definitions/owner"
        },
        "tags": {
          "$ref": "#/definitions/tags"
        }
      }
    },
    "projects": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/projectName"
      }
    },
    "projectName": {
      "type": "object",
      "required": [
        "project"
      ],
      "properties": {
        "project": {
          "$ref": "#/definitions/project"
        }
      }
    },
    "project": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "import": {
      "type": "object",
      "required": [
        "source",
        "domainName",
        "siteRole"
      ],
      "properties": {
        "source": {
          "type": "string"
        },
        "domainName": {
          "type": "string"
        },
        "siteRole": {
          "type": "string"
        }
      }
    },
    "capabilities": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/capabilitiesName"
      }
    },
    "capabilitiesName": {
      "type": "object",
      "required": [
        "capability"
      ],
      "properties": {
        "capability": {
          "$ref": "#/definitions/capability"
        }
      }
    },
    "capability": {
      "type": "object",
      "required": [
        "name",
        "mode"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "Error response in standardized API Foundation format.",
      "type": "object",
      "required": [
        "statusCode",
        "code",
        "message",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "statusCode": {
          "type": "integer"
        }
      }
    },
    "WorkbookDescription": {
      "type": "object",
      "description": "Workbook descriptions with their workbook id's.",
      "properties": {
        "description": {
          "type": "string"
        },
        "workbookId": {
          "type": "string"
        }
      },
      "required": [
        "description",
        "workbookId"
      ]
    }
  }
}